version: 2.1
orbs: {browser-tools: circleci/browser-tools@0.1.3, anchore: anchore/anchore-engine@1.8.4}
run_test_aws_access:
  run:
    name: test aws access
    shell: /bin/sh -eo pipefail
    command: "apk add --update aws-cli bash\naws sts get-caller-identity \n`aws ecr get-login --no-include-email --region ${AWS_REGION}`\n"
set_env_vars:
  deploy:
    name: set env variables
    command: |
      account_id=$(aws sts get-caller-identity --output text --query "Account")
      region=${AWS_REGION}
      image_tag="${account_id}.dkr.ecr.${region}.amazonaws.com/eq/ruby-base-image:${CIRCLE_SHA1}"
      echo "export account_id=$account_id" >> $BASH_ENV
      echo "export region=$region" >>  $BASH_ENV
      echo "export image_tag=$image_tag" >>  $BASH_ENV
jobs:
  docker-build-image:
    executor: anchore/anchore_engine
    shell: /bin/bash -eo pipefail
    steps:
    - setup_remote_docker: {docker_layer_caching: true}
    - checkout
    - run:
        name: test aws access
        shell: /bin/sh -eo pipefail
        command: "apk add --update aws-cli bash\naws sts get-caller-identity \n`aws ecr get-login --no-include-email --region ${AWS_REGION}`\n"
    - deploy:
        name: set env variables
        command: |
          account_id=$(aws sts get-caller-identity --output text --query "Account")
          region=${AWS_REGION}
          image_tag="${account_id}.dkr.ecr.${region}.amazonaws.com/eq/ruby-base-image:${CIRCLE_SHA1}"
          echo "export account_id=$account_id" >> $BASH_ENV
          echo "export region=$region" >>  $BASH_ENV
          echo "export image_tag=$image_tag" >>  $BASH_ENV
    - run:
        name: Build SkyMap Base Image
        command: |
          echo $image_tag
          docker build --tag $image_tag .
    - anchore/analyze_local_image: {image_name: $image_tag, policy_failure: false, timeout: '500'}
    - deploy:
        name: Push docker-images to ecr with only the commit and latest tag
        command: |
          `aws ecr get-login --region ${region} --no-include-email`
          docker push "${image_tag}"
          # tag as latest for auto-deploy
          function ecr-retag {
            echo "Retagging ecr image [${1}:${2}] as [${1}:${3}]"
            aws ecr put-image --repository-name "$1" --image-tag "$3" --region ${region} --image-manifest "$(aws ecr batch-get-image --repository-name "$1" --image-ids imageTag="$2" --region ${region} --query images[].imageManifest --output text)"
          }
          ecr-retag eq/ruby-base-image "${CIRCLE_SHA1}" "ruby-2.7.2-latest"
workflows:
  version: 2
  scheduled-workflow:
    jobs: [docker-build-image]
