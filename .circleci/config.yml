version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.6
  anchore: anchore/anchore-engine@1.9.0

jobs:
  docker-build-image:
    executor: anchore/anchore_engine
    shell: "/bin/bash -eo pipefail"
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Test AWS Access (Optional)
          env:
            # Securely pass AWS access credentials using temporary AWS session token
            AWS_ACCESS_KEY_ID: ${{ aws sts assume-role --role-arn arn:aws:iam::YOUR_ACCOUNT_ID:role/YourECRRoleArn --duration 3600 | jq -r '.Credentials.AccessKeyId' }}
            AWS_SECRET_ACCESS_KEY: ${{ aws sts assume-role --role-arn arn:aws:iam::YOUR_ACCOUNT_ID:role/YourECRRoleArn --duration 3600 | jq -r '.Credentials.SecretAccessKey' }}
            AWS_SESSION_TOKEN: ${{ aws sts assume-role --role-arn arn:aws:iam::YOUR_ACCOUNT_ID:role/YourECRRoleArn --duration 3600 | jq -r '.Credentials.SessionToken' }}
          command: |
            aws sts get-caller-identity
      - run:
          name: Set Environment Variables
          command: |
            account_id=$(aws sts get-caller-identity --output text --query "Account")
            region=${AWS_REGION}
            image_tag="${account_id}.dkr.ecr.${region}.amazonaws.com/eq/ruby-base-image:${CIRCLE_SHA1}"
            echo "export image_tag=$image_tag" >> $BASH_ENV
      - run:
          name: Build SkyMap Base Image
          command: |
            docker build --tag $image_tag .
      - run:
          name: Push Image to ECR with Tags
          command: |
            docker tag $image_tag "${account_id}.dkr.ecr.${region}.amazonaws.com/eq/ruby-base-image:ruby-2.7.8-latest"
            aws ecr get-login-password --region ${region} | docker login --username AWS --password-stdin ${account_id}.dkr.ecr.${region}.amazonaws.com
            docker push "${account_id}.dkr.ecr.${region}.amazonaws.com/eq/ruby-base-image:ruby-2.7.8-latest"
            docker push "${account_id}.dkr.ecr.${region}.amazonaws.com/eq/ruby-base-image:${CIRCLE_SHA1}"
      - anchore/analyze_local_image:
          image_name: $image_tag
          policy_failure: False
          timeout: '500'

workflows:
  version: 2
  commit:
    jobs:
      - docker-build-image
  
  scheduled-workflow:
    triggers:
      - schedule:
          cron: "0 12 * * 1"
          filters:
            branches:
              only:
                - ruby-2.7.1
    jobs:
      - docker-build-image