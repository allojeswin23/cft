version: 2.1

orbs: {browser-tools: circleci/browser-tools@0.1.3, anchore: anchore/anchore-engine@1.8.4}

anchors:
  run_test_aws_access:
    run:
      name: Test AWS access
      command: |
        apk add --update aws-cli bash
        aws sts get-caller-identity
  set_env_vars:
    run:
      name: Set environment variables
      command: |
        account_id=$(aws sts get-caller-identity --output text --query "Account")
        region=${AWS_REGION}
        image_tag="${account_id}.dkr.ecr.${region}.amazonaws.com/eq/ruby-base-image:${CIRCLE_SHA1}"
        echo "export account_id=$account_id" >> $BASH_ENV
        echo "export region=$region" >> $BASH_ENV
        echo "export image_tag=$image_tag" >> $BASH_ENV

jobs:
  docker-build-image:
    executor: anchore/anchore_engine
    shell: /bin/bash -eo pipefail
    steps:
      - setup_remote_docker: {docker_layer_caching: true}
      - checkout
      - <<: *run_test_aws_access
      - <<: *set_env_vars
      - run:
          name: Build SkyMap Base Image
          command: |
            echo $image_tag
            docker build --tag $image_tag .
      - anchore/analyze_local_image: {image_name: $image_tag, policy_failure: false, timeout: '500'}
      - deploy:
          name: Push docker-images to ECR with only the commit and latest tag
          command: |
            aws ecr get-login-password --region ${region} | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.${region}.amazonaws.com
            docker push "${image_tag}"
            # Tag as latest for auto-deploy
            ecr-retag eq/ruby-base-image "${CIRCLE_SHA1}" "ruby-2.7.2-latest"

workflows:
  version: 2
  scheduled-workflow:
    jobs: [docker-build-image]
